今天，自己自定义一个类，然后在类中声明类变量的时候出来问题：编译器提示”不允许使用不完整类型的变量“
源代码如下：

class CBtnToolTip : public CButton
{
DECLARE_DYNAMIC(CBtnToolTip)

BOOL Create(CDC *dc,CPoint *pt);
CPoint m_CursorPos;
CBtnToolTip m_BtnToolTip;
......
}
经过百度之后发现原来是这样的：
C++不支持在类中包含本类的实例成员，默认在类中定义类自己的变量时，此时的类是不完整的。不过，我们可以定义指针或引用类型的变量。


所以最终的关键理解就在于，只有在最后一个花括号，才表示类的声明完毕了，才能用来定义对象。所以，你在类外定义对象，类自然都是完整定义好了的。而在类声明中就定义本类的对象，无论放在类的哪里，都是类类型声明中的一部分。你要理解完整的类定义是哪样的，还要知道在类中定义对象这个动作就是类类型本身的一部分。对象不定义好，类就不完整，类就不能用来定义对象。而想要完整的类，就要这个对象被定义好。这就是一个根本性矛盾。这在计算机中，叫做死锁，在哲学中叫做矛盾。
